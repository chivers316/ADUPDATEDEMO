// <auto-generated />
using System;
using ADASSESSMENT.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ADASSESSMENT.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.3");

            modelBuilder.Entity("ADASSESSMENT.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<int?>("EngineerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstLine")
                        .HasColumnType("TEXT");

                    b.Property<string>("PostCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("SecondLine")
                        .HasColumnType("TEXT");

                    b.Property<string>("ThirdLine")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EngineerId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("ADASSESSMENT.Models.Engineer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AddressId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BookedSlot")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ContactNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EngineerAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("EngineerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("JobCategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SelectedJob")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("TimeSlotId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("VRN")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Engineers");
                });

            modelBuilder.Entity("ADASSESSMENT.Models.JobCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategorySelected")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("EngineerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EngineerId");

                    b.ToTable("JobCategories");
                });

            modelBuilder.Entity("ADASSESSMENT.Models.TimeSlot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("BookedDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("EngineerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SlotBooked")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("friSlot1")
                        .HasColumnType("INTEGER");

                    b.Property<string>("friSlot1String")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("friSlot2")
                        .HasColumnType("INTEGER");

                    b.Property<string>("friSlot2String")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("friSlot3")
                        .HasColumnType("INTEGER");

                    b.Property<string>("friSlot3String")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("monSlot1")
                        .HasColumnType("INTEGER");

                    b.Property<string>("monSlot1String")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("monSlot2")
                        .HasColumnType("INTEGER");

                    b.Property<string>("monSlot2String")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("monSlot3")
                        .HasColumnType("INTEGER");

                    b.Property<string>("monSlot3String")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("satSlot1")
                        .HasColumnType("INTEGER");

                    b.Property<string>("satSlot1String")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("satSlot2")
                        .HasColumnType("INTEGER");

                    b.Property<string>("satSlot2String")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("satSlot3")
                        .HasColumnType("INTEGER");

                    b.Property<string>("satSlot3String")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("sunSlot1")
                        .HasColumnType("INTEGER");

                    b.Property<string>("sunSlot1String")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("sunSlot2")
                        .HasColumnType("INTEGER");

                    b.Property<string>("sunSlot2String")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("sunSlot3")
                        .HasColumnType("INTEGER");

                    b.Property<string>("sunSlot3String")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("thuSlot1")
                        .HasColumnType("INTEGER");

                    b.Property<string>("thuSlot1String")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("thuSlot2")
                        .HasColumnType("INTEGER");

                    b.Property<string>("thuSlot2String")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("thuSlot3")
                        .HasColumnType("INTEGER");

                    b.Property<string>("thuSlot3String")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("tueSlot1")
                        .HasColumnType("INTEGER");

                    b.Property<string>("tueSlot1String")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("tueSlot2")
                        .HasColumnType("INTEGER");

                    b.Property<string>("tueSlot2String")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("tueSlot3")
                        .HasColumnType("INTEGER");

                    b.Property<string>("tueSlot3String")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("wedSlot1")
                        .HasColumnType("INTEGER");

                    b.Property<string>("wedSlot1String")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("wedSlot2")
                        .HasColumnType("INTEGER");

                    b.Property<string>("wedSlot2String")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("wedSlot3")
                        .HasColumnType("INTEGER");

                    b.Property<string>("wedSlot3String")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EngineerId");

                    b.ToTable("TimeSlots");
                });

            modelBuilder.Entity("ADASSESSMENT.Models.Address", b =>
                {
                    b.HasOne("ADASSESSMENT.Models.Engineer", null)
                        .WithMany("Addresses")
                        .HasForeignKey("EngineerId");
                });

            modelBuilder.Entity("ADASSESSMENT.Models.JobCategory", b =>
                {
                    b.HasOne("ADASSESSMENT.Models.Engineer", null)
                        .WithMany("JobCategories")
                        .HasForeignKey("EngineerId");
                });

            modelBuilder.Entity("ADASSESSMENT.Models.TimeSlot", b =>
                {
                    b.HasOne("ADASSESSMENT.Models.Engineer", null)
                        .WithMany("TimeSlots")
                        .HasForeignKey("EngineerId");
                });

            modelBuilder.Entity("ADASSESSMENT.Models.Engineer", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("JobCategories");

                    b.Navigation("TimeSlots");
                });
#pragma warning restore 612, 618
        }
    }
}
